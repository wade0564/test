package com.emc.prometheus.parser.parse.section;import com.emc.prometheus.parser.parse.ParsedLogs;import com.emc.prometheus.parser.parse.match.Match;import com.emc.prometheus.parser.parse.match.ParentMatchSimple;import com.emc.prometheus.parser.pojo.LOG_FILE_TYPE;public class SectionManager {	public static Match getAsupLayout(ParsedLogs parsedLogs) {		ParentMatchSimple layoutTarget = new ParentMatchSimple("ASUP");		layoutTarget.addMatch(MessagesSectionManager.getManagerSection(parsedLogs));		layoutTarget.addMatch(KernelInfoLogSectionManager.getManagerSection(parsedLogs));		layoutTarget.addMatch(KernelInfoLogSectionManager.getManagerSection(parsedLogs));		return layoutTarget;	}		public static Match getMessageLayout(ParsedLogs parsedLogs) {		return MessagesSectionManager.getSingleManagerSection(parsedLogs);	}	public static Match getKernInfoLayout(ParsedLogs parsedLogs) {		return KernelInfoLogSectionManager.getSingleManagerSection(parsedLogs);	}	public static Match getRootSection(ParsedLogs parsedLogs, LOG_FILE_TYPE logFileType) {				Match  root = null;				switch (logFileType) {		case ASUP:			root = getAsupLayout(parsedLogs);			break;		case KERN_INFO:			root = getKernInfoLayout(parsedLogs);			break;		case MESSAGES_ENGINEERING:			root = getMessageLayout(parsedLogs);			break;		default:			break;		}		return root;	}}